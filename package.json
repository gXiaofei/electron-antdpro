{
  "name": "ibp",
  "version": "1.0.0",
  "private": true,
  "description": "electron antd pro",
  "main": "./src/main/main.ts",
  "scripts": {
    "analyze": "cross-env ANALYZE=1 max build",
    "rebuild": "electron-rebuild --parallel --types prod,dev,optional --module-dir release/app",
    "build:renderer": "max build",
    "build:main": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./config/webpack.config.main.ts",
    "build": "concurrently \"npm run build:renderer\" \"npm run build:main\"",
    "dev": "npm run start:dev",
    "i18n-remove": "pro i18n-remove --locale=zh-CN --write",
    "postinstall": "concurrently \"max setup\" \"ts-node ./scripts/check-native-dep.js && electron-builder install-app-deps\"",
    "lint": "npm run lint:js && npm run lint:prettier && npm run tsc",
    "lint-staged": "lint-staged",
    "lint-staged:js": "eslint --ext .js,.jsx,.ts,.tsx ",
    "lint:fix": "eslint --fix --cache --ext .js,.jsx,.ts,.tsx --format=pretty ./src ",
    "lint:js": "eslint --cache --ext .js,.jsx,.ts,.tsx --format=pretty ./src",
    "lint:prettier": "prettier -c --write \"src/**/*\" --end-of-line auto",
    "openapi": "max openapi",
    "prepare": "husky install",
    "prettier": "prettier -c --write \"src/**/*\"",
    "serve": "umi-serve",
    "start:renderer": "ts-node ./scripts/check-port-in-use.js && cross-env UMI_ENV=dev max dev",
    "start:main": "cross-env NODE_ENV=development electronmon -r ts-node/register/transpile-only .",
    "start": "concurrently \"npm run start:renderer\" \"wait-on http://127.0.0.1:8000 && npm run start:main\"",
    "start:preload": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./config/webpack.config.preload.ts",
    "start:dev": "cross-env REACT_APP_ENV=dev MOCK=none UMI_ENV=dev max dev",
    "start:no-mock": "cross-env MOCK=none UMI_ENV=dev max dev",
    "start:pre": "cross-env REACT_APP_ENV=pre UMI_ENV=dev max dev",
    "start:test": "cross-env REACT_APP_ENV=test MOCK=none UMI_ENV=dev max dev",
    "build-icon": "electron-icon-builder --input=./src/assets/logo.png --output=temp --flatten",
    "debug-mac:prod": "DEBUG_PROD=true npm run package",
    "debug-win:prod": "npx cross-env DEBUG_PROD=true npm run package",
    "package": "ts-node ./scripts/clean.js dist build && npm run build && npm run builder",
    "builder": "electron-builder build -m",
    "test": "max test",
    "test:component": "max test ./src/components",
    "tsc": "tsc --noEmit"
  },
  "lint-staged": {
    "**/*.{js,jsx,ts,tsx}": "npm run lint-staged:js",
    "**/*.{js,jsx,tsx,ts,less,md,json}": [
      "prettier --write"
    ]
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not ie <= 10"
  ],
  "dependencies": {
    "@ant-design/icons": "^4.7.0",
    "@ant-design/pro-components": "1.1.1",
    "@umijs/route-utils": "^2.0.0",
    "antd": "^4.20.0",
    "classnames": "^2.3.0",
    "electron-debug": "^3.2.0",
    "electron-log": "^4.4.8",
    "electron-store": "^8.0.2",
    "electron-updater": "^5.0.5",
    "lodash": "^4.17.0",
    "moment": "^2.29.0",
    "omit.js": "^2.0.2",
    "rc-menu": "^9.1.0",
    "rc-util": "^5.16.0",
    "react": "^17.0.0",
    "react-dev-inspector": "^1.7.0",
    "react-dom": "^17.0.0",
    "react-helmet-async": "^1.2.0"
  },
  "devDependencies": {
    "@ant-design/pro-cli": "^2.1.0",
    "@commitlint/cli": "^17.0.3",
    "@commitlint/config-conventional": "^17.0.3",
    "@types/classnames": "^2.3.1",
    "@types/express": "^4.17.0",
    "@types/history": "^4.7.0",
    "@types/jest": "^26.0.0",
    "@types/lodash": "^4.14.0",
    "@types/node": "^18.6.1",
    "@types/react": "^17.0.0",
    "@types/react-dom": "^17.0.0",
    "@types/react-helmet": "^6.1.0",
    "@types/rimraf": "^3.0.2",
    "@types/terser-webpack-plugin": "^5.2.0",
    "@types/webpack-bundle-analyzer": "^4.4.1",
    "@umijs/fabric": "^2.11.1",
    "@umijs/max": "^4.0.0-rc.22",
    "@umijs/openapi": "^1.3.0",
    "chalk": "^4.1.2",
    "concurrently": "^7.2.2",
    "cross-env": "^7.0.0",
    "cross-port-killer": "^1.3.0",
    "detect-installer": "^1.0.0",
    "detect-port": "^1.3.0",
    "electron": "^19.0.8",
    "electron-builder": "^23.1.0",
    "electron-devtools-installer": "^3.2.0",
    "electron-icon-builder": "^2.0.1",
    "electron-notarize": "^1.2.1",
    "electron-rebuild": "^3.2.7",
    "electronmon": "^2.0.2",
    "eslint": "^7.32.0",
    "husky": "^8.0.1",
    "jest": "^28.1.3",
    "lint-staged": "^10.0.0",
    "mockjs": "^1.1.0",
    "prettier": "^2.5.0",
    "rimraf": "^3.0.2",
    "swagger-ui-dist": "^4.12.0",
    "terser-webpack-plugin": "^5.3.3",
    "ts-loader": "^9.3.1",
    "ts-node": "^10.9.1",
    "typescript": "^4.5.0",
    "umi-presets-pro": "^1.0.1",
    "umi-serve": "^1.9.10",
    "wait-on": "^6.0.1",
    "webpack": "^5.74.0",
    "webpack-bundle-analyzer": "^4.5.0",
    "webpack-cli": "^4.10.0",
    "webpack-merge": "^5.8.0"
  },
  "engines": {
    "node": ">=12.0.0"
  },
  "build": {
    "productName": "ElectronReact",
    "appId": "org.erb.ElectronReact",
    "asar": false,
    "asarUnpack": "**\\*.{node,dll}",
    "files": [
      "dist",
      "node_modules",
      "package.json"
    ],
    "afterSign": "./scripts/notarize.js",
    "mac": {
      "target": {
        "target": "default",
        "arch": [
          "arm64",
          "x64"
        ]
      },
      "type": "distribution",
      "hardenedRuntime": true,
      "entitlements": "./src/assets/entitlements.mac.plist",
      "entitlementsInherit": "./src/assets/entitlements.mac.plist",
      "gatekeeperAssess": false
    },
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "target": [
        "nsis"
      ]
    },
    "linux": {
      "target": [
        "AppImage"
      ],
      "category": "Development"
    },
    "directories": {
      "app": "release/app",
      "buildResources": "src/assets",
      "output": "release/build"
    },
    "extraResources": [
      "./src/assets/**"
    ]
  },
  "electronmon": {
    "patterns": [
      "!**/**",
      "src/main/*"
    ],
    "logLevel": "quiet"
  }
}
